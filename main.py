import logging
import time
import uuid
import statistics

import telebot as tb
import telebot.types
from telebot.types import Message, ReactionTypeEmoji
from telebot.util import content_type_service, content_type_media, update_types

import core.kb
from core.Logers import LoggingConfigurations
from core.db import User, UserData, AdminRate

from core import *
from core.messages import send_message

from data.TEXT_MESSAGES import *

loger = LoggingConfigurations.main

bot = tb.TeleBot(TOKEN)

@bot.message_handler(commands=['start'], chat_types="private")
def start(message: Message):
    userID = int(message.from_user.id)
    userNAME = f"@{message.from_user.username}"
    if userNAME is None:
        userNAME = message.from_user.full_name
    userLINK = f"https://t.me/{message.from_user.username}"
    userLANGUAGE = message.from_user.language_code
    userOBJ = User(userID, userNAME, full_data=message)
    user_data = userOBJ.set_language("ru" if userLANGUAGE == "ru" else "en")
    bot.send_message(
        userID,
        HELLO[userOBJ.userdata.language if userOBJ.userdata.language == "ru" else "en"],
        reply_markup=core.kb.hello_kb()
    )
    userOBJ.exit()

@bot.message_handler(commands=['local', 'l', 'loc'], chat_types="supergroup")
def local(message: Message):
    bot.set_message_reaction(GROUP_ID, message.message_id, [ReactionTypeEmoji('üò¥')], is_big=False)


@bot.message_handler(commands=['info'], chat_types="supergroup")
def my_info(message: Message):
    bot.send_message(
        message.chat.id,
        f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—Å:\n"
        f"ID: {message.from_user.id}\n"
        f"username: @{message.from_user.username}\n"
        f"fullname: {message.from_user.full_name}\n"
        f"language: {message.from_user.language_code}\n"
        f"premium: {message.from_user.is_premium}\n",
        message_thread_id=message.message_thread_id
    )
    my_rate(message=message)

@bot.message_handler(commands=['my_rate', 'rate_info', 'rating', 'my'], chat_types="supergroup")
def my_rate(message: Message):
    Rates = AdminRate(message.from_user.id)
    my_rates_list = Rates.get_rate()
    if my_rates_list is not None:
        my_rates_list = [rate_obj[1] for rate_obj in my_rates_list]
        average_rating = statistics.mean(my_rates_list)
        bot.send_message(message.chat.id, f"–í–∞—à —Ä–µ–π—Ç–∏–Ω–≥: {round(average_rating, 1)}", message_thread_id=message.message_thread_id)
    else:
        bot.send_message(message.chat.id, "–û—Ü–µ–Ω–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.", message_thread_id=message.message_thread_id)


@bot.message_handler(commands=['rate'], chat_types="supergroup")
def rate(message: Message):
    messageID = message.id
    adminID = message.from_user.id
    adminNAME = message.from_user.username
    if GROUP_ID == int(message.chat.id) and message.is_topic_message is not None:
        ticketID = message.message_thread_id
        userD = User(ticketID=ticketID)
        if userD.userdata is not None:
            try:
                userID = userD.userdata.id
                bot.send_message(
                    userID,
                    "–û—Ü–µ–Ω–∏—Ç–µ —Ä–∞–±–æ—Ç—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ—Ç 1 –¥–æ 5:",
                    reply_markup=core.kb.rate_support(adminID)
                )
                bot.send_message(GROUP_ID, "–î–∏–∞–ª–æ–≥ –æ—Ü–µ–Ω–∫–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω", message_thread_id=message.message_thread_id)
            except Exception as err:
                bot.reply_to(message, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∏–∞–ª–æ–≥–∞ –æ—Ü–µ–Ω–∫–∏.")
                loger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∏–∞–ª–æ–≥–∞ –æ—Ü–µ–Ω–∫–∏ \n error: {str(err)}")
        else:
            bot.reply_to(message,"userID –¥–ª—è —ç—Ç–æ–≥–æ —Ç–æ–ø–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        userD.exit()


@bot.message_handler(
    content_types=content_type_media,
    chat_types="private"
)
def content_user(message: Message):
    userID = message.from_user.id
    userNAME = message.from_user.username
    if userNAME is None:
        userNAME = message.from_user.full_name
    userLANGUAGE = message.from_user.language_code
    contentTYPE = message.content_type
    userOBJ = User(userID, userNAME)
    userTICKET = userOBJ.userdata.ticketID
    try:
        bot.edit_forum_topic(
            chat_id=GROUP_ID,
            message_thread_id=str(userTICKET),
            name=f"{userNAME} | {str(uuid.uuid4())[:13]}"
        )
        # –∫–æ—Å—Ç—ã–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–æ–ø–∏–∫ ?? –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–∏—Å —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–∏ 175-177 ??
        # Telegram Bot API –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∞–¥–µ–∫–≤–∞—Ç–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–æ–ø–∏–∫
    except:
        forum_topic = bot.create_forum_topic(GROUP_ID, userNAME)
        userOBJ.set_ticket(forum_topic.message_thread_id)
        userTICKET = forum_topic.message_thread_id
        bot.send_message(message.from_user.id, CREATED[userOBJ.userdata.language])
        bot.send_message(
            GROUP_ID,
            f"–°–æ–∑–¥–∞–Ω —Ç–∏–∫–µ—Ç –¥–ª—è:\n"
            f"userID: {userOBJ.userdata.id}\n"
            f"username: @{userOBJ.userdata.username}\n"
            f"—è–∑—ã–∫: {userOBJ.userdata.language}\n"
            f"=======================\n"
            f"ticketID: {userTICKET}\n\n"
            f"–î–ª—è –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–∏—à–∏—Ç–µ –≤ —ç—Ç–æ–º —Ç–æ–ø–∏–∫–µ(—Ç–∏–∫–µ—Ç–µ).",
            message_thread_id=userTICKET
        )
    try:
        bot.copy_message(GROUP_ID, message.chat.id, message.message_id, message_thread_id=userTICKET)
    except Exception as err:
        bot.send_message(
            GROUP_ID,
            f"–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è",
            message_thread_id=userTICKET
        )
        bot.send_message(message.from_user.id, "–ü—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞\n–ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ @arayas1337")
        bot.send_message(DEV, f"–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{message.from_user.username} –ø—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞\nmain.content_user\nerror: {str(err)}")
        loger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è \n error: {str(err)}")
    loger.info(f"—Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: uid: {userID} | username: {userNAME} | [{message.text if message.content_type == "text" else message.content_type}]")
    userOBJ.exit()

@bot.message_handler(
    content_types=content_type_media,
    chat_types=["supergroup"]
)
def content_admin(message: Message):
    messageID = message.id
    adminID = message.from_user.id
    adminNAME = message.from_user.username
    if GROUP_ID == int(message.chat.id) and message.is_topic_message is not None:
        ticketID = message.message_thread_id
        userD = User(ticketID=ticketID)
        if userD.userdata is not None:
            try:
                userID = userD.userdata.id
                send_message(bot, message, userID, adminNAME)
            except Exception as err:
                bot.reply_to(message, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")
                bot.send_message(
                    DEV,
                    f"–£ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ @{message.from_user.username} –ø—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞\n"
                    f"main.content_user\n"
                    f"error: {str(err)}"
                )
                loger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è \n error: {str(err)}")
        else:
            bot.reply_to(
                message,
                "userID –¥–ª—è —ç—Ç–æ–≥–æ —Ç–æ–ø–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω."
            )
            #bot.close_forum_topic(message.chat.id, message.message_thread_id)
        userD.exit()

@bot.message_handler(content_types=content_type_service)
def sys_message_clean(message: Message):
    try:
        bot.delete_message(message.chat.id,message.message_id)
    except Exception as err:
        pass
        #loger.warning(f"sys_message_clean | error: {str(err)}")

@bot.callback_query_handler(func=lambda call: True)
def rate_callback(call: telebot.types.CallbackQuery):
    bot.delete_message(call.from_user.id, call.message.message_id)
    data = str(call.data)
    data = data.split('|')
    admin_id = data[0]
    rate = int(data[1])
    rate_mark = "‚≠êÔ∏è"*rate
    user_id = call.from_user.id
    """
    if user_id == admin_id:
        bot.send_message(call.from_user.id, "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ü–µ–Ω–∏—Ç—å —Å–∞–º–∏ —Å–µ–±—è\nXD")
    """
    Rate = AdminRate(admin_id, user_id)
    Rate.new_rate(rate)
    Rate.exit()
    bot.send_message(GROUP_ID, f"–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {admin_id} –±—ã–ª –æ—Ü–µ–Ω–µ–Ω: {rate_mark} | {rate}/5")
    if rate == 5:
        bot.send_message(
            call.from_user.id,
            f"""
            –ë–æ–ª—å—à–æ–µ —Å–ø–∞—Å–∏–±–æ –∑–∞ —Ç–æ, —á—Ç–æ –æ—Ü–µ–Ω–∏–ª–∏ –Ω–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É!
            
–ú—ã –æ—á–µ–Ω—å —Ä–∞–¥—ã, —á—Ç–æ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è –Ω–∞—à —Å–µ—Ä–≤–∏—Å. –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –∫–∞–∫–∏–µ-–ª–∏–±–æ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã –≤ –±—É–¥—É—â–µ–º, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –±–µ–∑ –∫–æ–ª–µ–±–∞–Ω–∏–π! üòä

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–í–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ arayas-cheats.com
            """)
    else:
        bot.send_message(
            call.from_user.id,
            f"""
            –ù–∞–º –æ—á–µ–Ω—å –∂–∞–ª—å, —á—Ç–æ –≤—ã –æ—Å—Ç–∞–ª–∏—Å—å –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –¥–æ–≤–æ–ª—å–Ω—ã –Ω–∞—à–∏–º —Å–µ—Ä–≤–∏—Å–æ–º. 
            
–ú—ã —Ü–µ–Ω–∏–º –≤–∞—à—É –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –∏ –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è —Å–¥–µ–ª–∞—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ–µ, —á—Ç–æ–±—ã —É–ª—É—á—à–∏—Ç—å –Ω–∞—à–∏ —É—Å–ª—É–≥–∏.

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–í–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ arayas-cheats.com
            """)


while True:
    try:
        bot.infinity_polling(
            5,
            logger_level=logging.DEBUG
        )
    except Exception as err:
        bot.send_message(DEV, f"infinity_polling.error | {str(err)}")
        time.sleep(15)